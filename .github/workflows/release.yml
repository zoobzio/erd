name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  validate:
    name: Validate Module
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Validate go.mod
        run: |
          go mod tidy
          git diff --exit-code go.mod || (echo "go.mod needs updating" && exit 1)

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Run linting
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64.8
          args: --config=.golangci.yml --timeout=5m

  release:
    name: Create Release
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          install-only: true

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: dist/
          retention-days: 7

  verify:
    name: Verify Release
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Get release version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Verify module can be fetched
        run: |
          sleep 10

          mkdir -p /tmp/test-erd
          cd /tmp/test-erd
          go mod init test

          go get github.com/zoobzio/erd@${{ steps.version.outputs.VERSION }}
          go list -m github.com/zoobzio/erd

      - name: Create release summary
        run: |
          echo "### Release ${{ steps.version.outputs.VERSION }} Published Successfully! ðŸŽ‰" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### Installation" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "go get github.com/zoobzio/erd@${{ steps.version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### Release Notes" >> $GITHUB_STEP_SUMMARY
          echo "View the full release notes at: https://github.com/zoobzio/erd/releases/tag/${{ steps.version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY

  notify:
    name: Notify Release
    needs: verify
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Get release version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create issue for release notes review
        uses: actions/github-script@v7
        with:
          script: |
            const version = '${{ steps.version.outputs.VERSION }}';
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Release ${version} - Post-Release Checklist`,
              body: `## Release ${version} has been published! ðŸŽ‰

              ### Post-Release Checklist
              - [ ] Verify the release appears correctly on GitHub
              - [ ] Test installation with \`go get github.com/zoobzio/erd@${version}\`
              - [ ] Update any example dependencies if needed
              - [ ] Consider announcing the release if it contains significant changes
              - [ ] Close any issues/PRs that were addressed in this release

              ### Release URL
              https://github.com/zoobzio/erd/releases/tag/${version}

              ---
              This issue was automatically created by the release workflow.`,
              labels: ['release', 'documentation']
            });
            console.log(`Created issue #${issue.data.number}`);
        continue-on-error: true
